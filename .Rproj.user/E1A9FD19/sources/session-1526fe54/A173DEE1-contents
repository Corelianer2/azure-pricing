library(httr)
library(jsonlite)
library(dplyr)
library(knitr)

build_pricing_table <- function(json_data, table_data) {
  items <- json_data$Items
  if (length(items) > 0) {
    for (item in items) {
      table_data <- rbind(
        table_data,
        data.frame(
          SKU = item$armSkuName,
          Retail_Price = item$retailPrice,
          Unit_of_Measure = item$unitOfMeasure,
          Region = item$armRegionName,
          Meter = item$meterName,
          Product_Name = item$productName,
          stringsAsFactors = FALSE
        )
      )
    }
  }
  table_data
}

# Main logic
table_data <- data.frame(
  currencyCode = character(),
  tierMinimumUnits = character(),
  retailPrice = numeric(),
  unitPrice = numeric(),
  armRegionName = character(),
  local = character(),
  effectiveStartDate = character(),
  meterId = character(),
  meterName = character(),
  productId = character(),
  skuId = character(),
  productName = character(),
  skuName = character(),
  serviceName = character(),
  serviceId = character(),
  serviceFamily = character(),
  unitOfMeasure = character(),
  type = character(),
  isPrimaryMeterRegaion = logical(),
  armSkuName = character(),
  reservationTerm = character(),
  effectiveEndDate = character())

api_url <- "https://prices.azure.com/api/retail/prices"


response <- GET(api_url)
json_data <- fromJSON(content(response, as = "text"))

str(json_data$Items)

table_data <- build_pricing_table(json_data, table_data)
next_page <- json_data$NextPageLink

while (!is.null(nextPage) && nextPage != "") {
  response <- GET(nextPage)
  json_data <- fromJSON(content(response, as = "text"))
  table_data <- build_pricing_table(json_data, table_data)
  next_page <- json_data$NextPageLink
}

# Print the table
kable(table_data, format = "markdown")

table_data <- bind_rows(
  table_data,
  items %>%
    select(
      SKU = armSkuName,
      Retail_Price = retailPrice,
      Unit_of_Measure = unitOfMeasure,
      Region = armRegionName,
      Meter = meterName,
      Product_Name = productName
    )
)
