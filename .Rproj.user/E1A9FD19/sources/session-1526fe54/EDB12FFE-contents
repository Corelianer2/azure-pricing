library(httr)
library(jsonlite)

response <- GET("https://datacenters.microsoft.com/wp-json/globe/regions")
data <- fromJSON(content(response, as = "text"))
str(data)

azure_regions <- data |> 
  select(post_title, post_name, geographyId, location, latitude, longitude, isOpen, dataResidency, continent)

View(azure_regions)


con <- dbConnect(duckdb::duckdb(), dbdir = "azure_prices.duckdb")
data <- dbReadTable(con, "azure_prices")

cleaned_data <- data |>
  mutate(
    effectiveStartDate = as.Date(effectiveStartDate),
    effectiveEndDate = as.Date(effectiveEndDate),
  )

dbWriteTable(con, "azure_prices", cleaned_data, overwrite = TRUE)

#join the cleaned data with the azure regions data
result <- cleaned_data %>%
  left_join(
    azure_regions %>% select(post_name, longitude, latitude),
    by = c("armRegionName" = "post_name")
  )

cleaned <- result %>%
  filter(!is.na(longitude) & !is.na(latitude))

dbWriteTable(con, "azure_prices", cleaned, overwrite = TRUE)



# Geocode Proecq Offices
proceq_offices <- data.frame(
  location = c("Ringstrasse 2,8603 Schwerzenbach",
               "Aliquippa, PA 15001, USA",
               "Bedford,MK44 3RZ,United Kingdom",
               "1 Fusionopolis Way, Singapore"),
  office_name = c("HQ Switzerland","USA office","UK Office", "Singapore Office")
)|>
  geocode(location, method = "osm", lat = latitude, long = longitude)

# Write Dataframe, so we don't need to geocode the addresses multiple times
saveRDS(proceq_offices, "proceq_offices.rds")





# Old approach, not used anymore  
# Fix wrongly geocoded "EU West", set to Amsterdam, Netherlands
#geocoded_data$latitude[geocoded_data$location == "EU West"] <- 52.379189
#geocoded_data$longitude[geocoded_data$location == "EU West"] <- 4.899431
#View(geocoded_data)


#linux_data <- cleaned_data |>
#  filter(meterName == "D32ads v6") |>
#  filter(type == "Consumption") |>
#  filter(!endsWith(productName, "Windows")) |>
#  arrange(desc(retailPrice)) |>
#  geocode(location, method = "osm", lat = latitude, long = longitude)
#
#linux_data$latitude[linux_data$location == "EU West"] <- 52.379189
#linux_data$longitude[linux_data$location == "EU West"] <- 4.899431

#windows_data <- cleaned_data |>
#  filter(meterName == "D32ads v6") |>
#  filter(type == "Consumption") |>
#  filter(endsWith(productName, "Windows")) |>
#  arrange(desc(retailPrice)) |>
#  geocode(location, method = "osm", lat = latitude, long = longitude)

# Fix wrongly geocoded "EU West", set to Amsterdam, Netherlands
#windows_data$latitude[windows_data$location == "EU West"] <- 52.379189
#windows_data$longitude[windows_data$location == "EU West"] <- 4.899431

